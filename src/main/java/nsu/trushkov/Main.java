package nsu.trushkov;

import javax.xml.bind.DatatypeConverter;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.io.IOException;


public class Main {

    public static void main(String[] args) {
        String filePath = "src/main/resources/text.txt";
        byte[] bytesForEnc = readFile(filePath);
        if (bytesForEnc == null) {
            System.out.println("Ошибка при чтении файла.");
            return;
        }

        byte[][] block = {
                { 0xE, 0x4, 0x6, 0x2, 0xB, 0x3, 0xD, 0x8, 0xC, 0xF, 0x5, 0xA, 0x0, 0x7, 0x1, 0x9 },
                { 0xB, 0x5, 0x1, 0x9, 0x8, 0xD, 0xF, 0x0, 0xE, 0x4, 0x2, 0x3, 0xC, 0x7, 0xA, 0x6 },
                { 0xB, 0xA, 0xF, 0x5, 0x0, 0xC, 0xE, 0x8, 0x6, 0x2, 0x3, 0x9, 0x1, 0x7, 0xD, 0x4 },
                { 0x3, 0xA, 0xD, 0xC, 0x1, 0x2, 0x0, 0xB, 0x7, 0x5, 0x9, 0x4, 0x8, 0xF, 0xE, 0x6 },
                { 0x9, 0x6, 0x3, 0x2, 0x8, 0xB, 0x1, 0x7, 0xA, 0x4, 0xE, 0xF, 0xC, 0x0, 0xD, 0x5 },
                { 0x3, 0x7, 0xE, 0x9, 0x8, 0xA, 0xF, 0x0, 0x5, 0x2, 0x6, 0xC, 0xB, 0x4, 0xD, 0x1 },
                { 0x1, 0xD, 0x2, 0x9, 0x7, 0xA, 0x6, 0x0, 0x8, 0xC, 0x4, 0x5, 0xF, 0x3, 0xB, 0xE },
                { 0xE, 0x7, 0xA, 0xC, 0xD, 0x1, 0x3, 0x9, 0x0, 0x2, 0xB, 0x4, 0xF, 0x8, 0x5, 0x6 }

        };

        String k = "AA65308CA6002BF5EB5D09C05F356D8FF37F66629AA3741D670AAA62917327068CA600";
        byte[] key = DatatypeConverter.parseHexBinary(k);

        Gost28147 encryptor = new Gost28147(block);
        System.out.println("Input Data: " + DatatypeConverter.printHexBinary(bytesForEnc));
        System.out.println("Encrypt Data: " + DatatypeConverter.printHexBinary(encryptor.encrypt(bytesForEnc, key)));
        System.out.println("Decrypt Data: "
                + DatatypeConverter.printHexBinary(encryptor.decrypt(encryptor.encrypt(bytesForEnc, key), key)));
        writeToFile("src/main/resources/text_after_decr.txt", encryptor.decrypt(encryptor.encrypt(bytesForEnc, key),key));
    }

    private static byte[] readFile(String filePath) {
        try {
            return Files.readAllBytes(Paths.get(filePath));
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        }
    }

    private static void writeToFile(String filePath, byte[] data) {
        try {
            Files.write(Paths.get(filePath), data);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
